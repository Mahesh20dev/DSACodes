// Minimum operation to halve array sum (priorityQueue) sigma
class Solution {
    public int halveArray(int[] nums) {
        PriorityQueue<Double> pq = new PriorityQueue<>(Comparator.reverseOrder());
        double sum = 0;
        for(int i=0; i<nums.length; i++) {
            sum += nums[i];
            pq.add((double) nums[i]);
        }
        
        double temp = sum;
        int count = 0;
        while(temp > sum / 2) {
            double x = pq.poll();
            temp -= (x / 2.0); 
            pq.add(x/2);
            count++;
        }
        return count;
    }
}

// Time = O(n logn)
// space = O(n)
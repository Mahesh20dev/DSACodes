// All about String Builder
import java.util.*;
public class New {
    public static void printChar(String fullName) {
        for(int i=0; i<fullName.length(); i++) {
            System.out.print(fullName.charAt(i) + " ");
        }
        System.out.println();
    }

    public static boolean isPalindrome(String name) {
        int n = name.length();

        // for(int i=0; i<n/2; i++) {
        //     if(name.charAt(i) != name.charAt(n-1-i)) {
        //         return false;
        //     }
        // }

        // while loop
        int i = 0;
        int j = n-1;
        while(i < j) {
            if(name.charAt(i) != name.charAt(n-1-i)) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }

    public static float getShortestPath(String path) {
        int x = 0, y = 0;

        for(int i=0; i<path.length(); i++) {
            char dir = path.charAt(i);
            if(dir == 'N') {
                y++;
            } else if(dir == 'S') {
                y--;
            } else if(dir == 'E') {
                x++;
            } else {
                x--;
            }
        }
        int X2 = x*x;
        int Y2 = y*y;
        return (float) Math.sqrt(X2+Y2);
    }

    public static String subString(String str, int si, int ei) {
        String sub = "";
        for(int i=si; i<ei; i++) {
            sub += str.charAt(i);
        }
        return sub;
    }

    public static String toUpperCase(String str) {
        StringBuilder sb = new StringBuilder("");
        char ch = Character.toUpperCase(str.charAt(0));
        sb.append(ch);

        for(int i=1; i<str.length(); i++) {
            if(str.charAt(i) == ' ' && i < str.length()-1) {
                sb.append(str.charAt(i));
                i++;
                sb.append(Character.toUpperCase(str.charAt(i)));
            } else {
                sb.append(str.charAt(i));
            }
        }
        return sb.toString();
    }

    public static String compress(String str) {  // O(n)
        String newStr = "";
        
        for(int i=0; i<str.length(); i++) {
            Integer count = 1;
            while(i < str.length()-1 && str.charAt(i) == str.charAt(i+1)) {
                count++;
                i++;
            }
            newStr += str.charAt(i);
            if(count >= 1) {
                newStr += count.toString();
            }    
        }
        return newStr;
    }

    public static String compressSubString(String str) {
        StringBuilder sb = new StringBuilder("");
        for(int i=0; i<str.length(); i++) {
            int count = 1;
            while(i < str.length()-1 && str.charAt(i) == str.charAt(i+1)) {
                count++;
                i++;
            }
            sb.append(str.charAt(i));
            if(count >= 1) {
                sb.append(count);
            }
        }
        return sb.toString();
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        // String name = sc.nextLine();
        // String name = "malayalam";
        // System.out.println(isPalindrome(name));

        // String path = "WNEENESENNN";
        // System.out.println(getShortestPath(path));

        // String s1 = "Tony";
        // String s2 = new String("Tony");
        // if(s1.equals(s2) ) {
        //     System.out.println("Equal");
        // } else {
        //     System.out.println("Not equal");
        // }

        // String str = "Hello World";
        // System.out.println(str.substring(3, 7));
        // System.out.println(subString(str, 3, 7));

        // String fruit[] = {"apple", "mango", "banana"};
        // String largest = fruit[0];
        // for(int i=0; i<fruit.length; i++) {
        //     if(largest.compareTo(fruit[i]) < 0) {
        //         largest = fruit[i];
        //     }
        // }
        // System.out.println(largest);

        // StringBuilder sb = new StringBuilder("");
        // for(char i='a'; i<='z'; i++) {
        //     sb.append(i);
        // }
        // System.out.println(sb);

        // String str = "hi, i am abuzar ";
        // System.out.println(toUpperCase(str));

        String str = "aaabbccd";
        // System.out.println(compress(str));
        System.out.println(compressSubString(str));
    }
}
// Sort Characters By Frequency (HashMap) sigma
class Solution {
    public String frequencySort(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        for(int i=0; i<s.length(); i++) {
            char ch = s.charAt(i);
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }

        PriorityQueue<Map.Entry<Character, Integer>> pq = new PriorityQueue<>
        ((a,b) -> a.getValue() == b.getValue() ? a.getKey() - b.getKey() : b.getValue() - a.getValue());

        for(Map.Entry<Character, Integer> e : map.entrySet()) {
            pq.add(e);
        }

        StringBuilder res = new StringBuilder();
        while(!pq.isEmpty()) {
            char ch = pq.poll().getKey();
            int freq = map.get(ch);
            while(freq != 0) {
                res.append(ch);
                freq--;
            }
        }
        return res.toString();
    }
}

// Time = O(N logK)
// Space = O(N)
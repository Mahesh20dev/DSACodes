// Kth largest odd number in a given range
import java.util.ArrayList;
public class Abcd {

    // optimized  Time and space = O(1)
    public static int kthOdd(int left, int right, int k) {
        int l = left;
        int r = right;

        int totalLength = (r - l + 1);
        int totalOddNumbers;

        if(r % 2 != 0) {
            totalOddNumbers = totalLength / 2 + 1;
        } else {
            totalOddNumbers = totalLength / 2;
        }

        if(k > totalOddNumbers) {
            return 0;
        }

        int largestOdd;
        if(r % 2 != 0) {
            largestOdd = r;
        } else {
            largestOdd = r-1;
        }

        return largestOdd - 2 * (k-1);
    }

    public static void main(String[] args) {
        int l = -10;
        int r = 10;
        int k = 8;

        // Brute force  Time and space = O(N)
        ArrayList<Integer> list = new ArrayList<>();

        for(int i=l; i<=r; i++) {
            if((i % 2) != 0) {
                list.add(i);
            }
        }

        // System.out.println(list.get(list.size()-k));
        System.out.println(kthOdd(l, r, k));
    }
}
// Chocolate Distribution (Easy)
import java.util.Arrays;
public class Practise2 {
    public static int findMinDiff(int[] array, int n, int m) {
        Arrays.sort(array);
        if(n == 0 || m == 0) {
            return 0;
        }
        if(n < m) {
            return -1;
        }
        int minValue = Integer.MAX_VALUE;
        for(int i=0; i+m-1 < n; i++) {
            int diff = array[i+m-1] - array[i];
            if(diff < minValue) {
                minValue = diff;
            }
        }
        return minValue;
    }

    public static void main(String[] args) {
        int[] array = {7, 3, 2, 4, 9, 12, 56};
//        int[] array = {3, 4, 1, 9, 56, 7, 9, 12};
//        int[] array = {12, 4, 7, 9, 2, 23, 25, 41, 30, 40, 28, 42, 30, 44, 48, 43, 50};
        int n = array.length;

        int m = 3;
        System.out.println(findMinDiff(array, n, m));
    }
}

Output:
2                    // Time complexity = O(n*log n)
                     // Space complexity = O(1)